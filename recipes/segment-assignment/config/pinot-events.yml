#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: examples
  namespace: pinot-quickstart
data:
  table_config.json: |-
    {
      "tableName": "events3",
      "tableType": "REALTIME",
      "segmentsConfig": {
        "timeColumnName": "ts",
        "timeType": "DAYS",
        "retentionTimeUnit": "DAYS",
        "retentionTimeValue": "3650",
        "segmentPushType": "APPEND",
        "segmentAssignmentStrategy": "BalanceNumSegmentAssignmentStrategy",
        "schemaName": "events3",
        "replication": "2",
        "replicasPerPartition": "2"
      },
      "tenants": {},
      "ingestionConfig":{
        "transformConfigs": [
          {
              "columnName": "ts",
              "transformFunction": "FromDateTime(tsString, 'YYYY-MM-dd''T''HH:mm:ss.SSSSSS''Z''')"
          }
        ]
      },
      "tableIndexConfig": {
        "loadMode": "MMAP",
        "streamConfigs": {
          "streamType": "kafka",
          "stream.kafka.consumer.type": "simple",
          "stream.kafka.topic.name": "events3",
          "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
          "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
          "stream.kafka.hlc.zk.connect.string": "kafka-zookeeper:2181",
          "stream.kafka.zk.broker.url": "kafka-zookeeper:2181",
          "stream.kafka.broker.list": "kafka:9092",
          "realtime.segment.flush.threshold.time": "3600000",
          "realtime.segment.flush.threshold.size": "50000",
          "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
        }
      },
      "metadata": {
        "customConfigs": {}
      }
    }

  schema.json: |-
    {
      "schemaName": "events3",
      "dimensionFieldSpecs": [{"name": "uuid", "dataType": "STRING"}],
      "metricFieldSpecs": [{"name": "count", "dataType": "INT"}],
      "dateTimeFieldSpecs": [
        {
          "name": "ts",
          "dataType": "TIMESTAMP",
          "format": "1:MILLISECONDS:EPOCH",
          "granularity": "1:MILLISECONDS"
        }
      ]
    }  
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pinot-events-table-creation
  namespace: pinot-quickstart
spec:
  template:
    spec:
      containers:
        - name: pinot-add-events-tabel-json
          image: apachepinot/pinot:latest
          args: [ "AddTable", "-schemaFile", "/var/pinot/examples/schema.json", "-tableConfigFile", "/var/pinot/examples/table_config.json", "-controllerHost", "pinot-controller", "-controllerPort", "9000", "-exec" ]
          env:
            - name: JAVA_OPTS
              value: "-Xms4G -Xmx4G -Dpinot.admin.system.exit=true"
          volumeMounts:
            - name: examples
              mountPath: /var/pinot/examples
      restartPolicy: OnFailure
      volumes:
        - name: examples
          configMap:
            name: examples
  backoffLimit: 100

